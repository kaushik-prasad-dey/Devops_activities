1) ansible-doc -l
2) ansible-doc - l | wc -l
3) ansible-doc - l | grep copy
4) https://docs.ansible.com/ansible/2.9/modules/list_of_all_modules.html


### List all modules:
ansible-doc -l
### No. of modules:
ansible-doc -l | wc -l
### Search for specific modules:
ansible-doc -l | grep shel
### To know about any specific modules:
ansible-doc shell




[devopsadmin@ip-172-31-81-101 ansible]$ vi display.yaml
[devopsadmin@ip-172-31-81-101 ansible]$ cat display.yaml
---
 - hosts: samplenode1
   tasks:
   - debug:
      msg:
       - "The os distribution is: {{ansible_distribution}}"
       - "The os name is: {{ansible_system}}"
       - "The os family is: {{ansible_os_family}}"
       - "The mount points are :{{ansible_mounts}}"

[devopsadmin@ip-172-31-81-101 ansible]$ ansible-playbook display.yaml
ansible samplenode1 -m setup -a "filter=ansible_mounts"
# How to jus verify playbook syntax:
#ansible-playbook testfile.yaml --syntax-check
ansible-playbook display.yaml â€“syntax-check


ansible-playbook test_var-datatype1.yaml

	Create playbook : 	with user-defined variables
				with the system variables
				using external files.



Task :::
	COPY & FETCH ???

	Deploy the artifacts which is present in Jenkins_Slave Machine to QA_Server
	
	using ansible ?

	1. Adhoc Command 

		AC 
			Jenkins_Master
				Slave
				QA-Server

	
	- Deploy the artifacts which is present in Jenkins_Slave Machine to QA_Server using Ansible.
	
		AC 
			Jenkins_Slave & QA Server


	COPY & FETCH ???

How to install any tools/services using ansible playbook.

---
- hosts: samplenode1
  gather_facts: false
  become: yes
  tasks:
  - name : Install git tool
    yum:
      name : git
      state : present

---
- hosts: samplenode1
  gather_facts: false
  tasks:
  - shell : "bash --version"
    register: bash_ver
  - set_fact:
       bash_version: "{{bash_ver.stdout.split('\n')[0].split()[3]}}"
       my_value: "bash_version"
  - debug: var=bash_version

#test_varfile1.yaml




---
 - hosts: samplenode1
   #gather_facts: false
   become: yes
   tasks:
   - name : install httpd
     yum:
       name: httpd
       state: present
   notify:
     - start httpd
   handlers:
   - name : start httpd
     service:
        name: httpd
        state: started

Service Module ===> started/stopped/restarted
yum/apt Module ===> state: prsent/absent/latest

---
 - hosts: "{{ host_name }}"
   become:yes
   tasks:
   - name: Install "{{tool_name}}"
     yum:
       name : "{{ tool_name }}"
       state: "{{ tool_state }}"

ansible-playbook Install_pkg3.yaml -e "host_name=samplenode1 tool_name=git tool_state=present"

Loops:::
---
 - hosts: samplenode1
   gather_facts: false
   become: yes
   tasks:
    - yum:
      name: "{{item}}"
      state: absent
      loop:
       - git
       - httpd
       - vim

Ansible Roles are used to organize the Ansible Components
To reuse & Share.

Understand the structure of Ansible Components ::::
    playbooks, handlers, loop

Infra - Ansible -- dedicated repo -->
    ansible-galaxy ==> create the ansible roles.
    ansible-galaxy init testrepo1
    ansible-galaxy install rubyisbeautiful.multi-app

Packages ::::: present/absent/latest
    Install any package :::
        pre-requisites
   	     Install the actual tool
        post_installation activities
	     
   
    
roles/testrepo1/tasks